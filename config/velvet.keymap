#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define SYM 1
#define NAV 2

/ {
    behaviors {
        lh_pht: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 29 19 18 28 27 17 16 26 25 15 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 34 35 36 37>;
        };

        rh_pht: right_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  Q  |  W  |  F   |  P   |  B   |    |  J   |  L   |  U  |  Y  |  '  |
            // |  A  |  R  |  S   |  T   |  G   |    |  M   |  N   |  E  |  I  |  O  |
            // |  Z  |  X  |  C   |  D   |  V   |    |  K   |  H   |  ,  |  .  |  /  |
            //       | TAB |  `   |  ESC | Enter|    | space| BSPC |  [  |  '  |

            bindings = <
&kp Q        &kp W       &kp E         &kp R       &kp T        &kp Y      &kp U         &kp I         &kp O       &kp P
&mt LCTRL A  &mt LALT S  &mt LSHIFT D  &mt LGUI F  &kp G        &kp H      &mt LGUI J    &mt LSHIFT K  &mt LALT L  &mt LCTRL SEMI
&kp Z        &kp X       &kp C         &kp V       &kp B        &kp N      &kp M         &kp COMMA     &kp DOT     &kp FSLH
             &kp TAB     &kp GRAVE     &kp ESC     &kp ENTER    &kp SPACE  &lt SYM BSPC  &kp LBKT      &kp SQT
            >;
        };

        SYM {
            bindings = <
&kp EXCL   &kp AT     &kp POUND             &kp DLLR            &kp PRCNT    &kp CARET  &kp AMPS            &kp STAR              &kp LPAR   &kp RPAR
&kp KP_N1  &kp KP_N2  &lh_pht LSHIFT KP_N3  &lh_pht LGUI KP_N4  &kp KP_N5    &kp KP_N6  &rh_pht LGUI KP_N7  &rh_pht LSHIFT KP_N8  &kp KP_N9  &kp KP_N0
&kp RBRC   &kp RBRC   &kp MINUS             &kp EQUAL           &kp GRAVE    &kp TILDE  &kp U               &kp DQT               &kp BSLH   &kp PIPE
           &kp LBKT   &kp RBKT              &trans              &kp ENTER    &kp SPACE  &trans              &trans                &trans
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT
&trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans  &trans
        &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans
            >;
        };
    };
};
